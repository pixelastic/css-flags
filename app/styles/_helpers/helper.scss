// Handy method to remove units from values, to ease computation
// @args value: Value in any unit
// @returns: Value without unit
@function _($value) {
    @return $value / ($value * 0 + 1);
}

// Link polygen point lists to a single one
// @args: lists with positions
// @returns: New single list which can be used in polygen()
@function link_list($args...) {
  $result: ();
  $len: length($args);

  @for $i from 1 to $len + 1 {
    $list: nth($args, $i);
    $result: append($result, $list, comma);
  }

  @if ($len <= 2) {
    @return $result;
  }

  @for $i from $len - 1 to 1 {
    $list: nth($args, $i);
    $result: append($result, nth($list, 1), comma);
  }
  @return $result;
}

// Sets the flag ratio and update all magic variables
// @args ratio: Ratio of height / width
@mixin ratio($ratio:1) {
  $height:round($width * $ratio) !global;
  @include set-syntactic-sugar($width, $height);
  width:$width;
  height:$height;
}

// Sets a bunch of magic variables to have handy access to height and width
// split
// @args width: Flag width
// @args height: Flag height
@mixin set-syntactic-sugar($width, $height) {
  $h2:$height/2 !global;
  $h3:$height/3 !global;
  $h4:$height/4 !global;
  $h5:$height/5 !global;
  $h6:$height/6 !global;
  $h7:$height/7 !global;
  $h8:$height/8 !global;
  $h9:$height/9 !global;
  $h10:$height/10 !global;
  $h11:$height/11 !global;
  $h12:$height/12 !global;
  $h14:$height/14 !global;
  $h16:$height/16 !global;
  $h18:$height/18 !global;
  $h20:$height/20 !global;
  $h24:$height/24 !global;
  $h27:$height/27 !global;
  $h28:$height/28 !global;
  $h30:$height/30 !global;
  $h32:$height/32 !global;
  $h34:$height/34 !global;
  $h36:$height/36 !global;
  $h48:$height/48 !global;
  $h60:$height/60 !global;
  $h72:$height/72 !global;
  $h80:$height/80 !global;
  $h84:$height/84 !global;
  $h90:$height/90 !global;
  $h92:$height/92 !global;
  $h96:$height/96 !global;
  $h100:$height/100 !global;
  $h110:$height/110 !global;
  $h120:$height/120 !global;
  $h128:$height/128 !global;
  $h140:$height/140 !global;
  $h144:$height/144 !global;
  $h198:$height/198 !global;
  $h200:$height/200 !global;
  $h224:$height/224 !global;
  $h240:$height/240 !global;
  $h315:$height/315 !global;
  $h360:$height/360 !global;
  $h432:$height/432 !global;
  $h504:$height/504 !global;
  $h720:$height/720 !global;
  $h800:$height/800 !global;
  $h1500:$height/1500 !global;
  $h2880:$height/2880 !global;
  $h6000:$height/6000 !global;

  $w2:$width/2 !global;
  $w3:$width/3 !global;
  $w4:$width/4 !global;
  $w5:$width/5 !global;
  $w6:$width/6 !global;
  $w7:$width/7 !global;
  $w8:$width/8 !global;
  $w9:$width/9 !global;
  $w10:$width/10 !global;
  $w12:$width/12 !global;
  $w16:$width/16 !global;
  $w18:$width/18 !global;
  $w20:$width/20 !global;
  $w22:$width/22 !global;
  $w23:$width/23 !global;
  $w25:$width/25 !global;
  $w28:$width/28 !global;
  $w30:$width/30 !global;
  $w32:$width/32 !global;
  $w37:$width/37 !global;
  $w50:$width/50 !global;
  $w52:$width/52 !global;
  $w110:$width/110 !global;
  $w2000:$width/2000 !global;
}

// Mark some flags as incomplete
@mixin wip() {
  &:hover {
    outline: 150px solid rgba(255, 206, 0, .8)
  }
}

